////li5_8.cpp
#include <stdio.h>

class Animal{
public:
    virtual void Shout()=0;
    virtual void Impl()=0;
    virtual ~Animal(){
        printf("Animal destroy!\n");     //虚析构函数
    }
};

class Dog:public Animal{
public:
    virtual void Shout(){                //必须被实现，即使函数体是空的
        printf("wang wang wang\n");
    }
    virtual void Impl(){
        printf("implement of Dog!\n");
    }
    virtual ~Dog(){                      //虚析构函数
        printf("Dog destroy!\n");
    }
};

class Cat:public Animal{
public:
    virtual void Shout(){               //必须被实现，即使函数体是空的
        printf("Miao miao miao!\n");
    }
    virtual void Impl(){
        printf("implement of Cat!\n");
    }
    virtual ~Cat(){                     //虚析构函数
        printf("Cat destroy!\n");
    }
};

void Test_func(){
    //Animal a;                        //error:抽象类不能建立对象
    Dog dog;                           //OK,可以声明抽象类的指针
    Cat cat;                           //OK,可以声明抽象类的指针
    Animal *animal=&dog;
    animal->Shout();
    animal->Impl();
    printf("\n");
    animal=&cat;
    animal->Shout();
    animal->Impl();
    printf("\n");
}

int main(){
    Test_func();
    while(1);
    return 0;
}
