一、回顾

二、局部式的内部类
定义的位置


三、局部内部类
定义在方法里
为了使局部内部类有意义，经常定义父类或抽象父类或接口，让局部内部类继承这些类或者实现接口，覆盖或实现方法.....



四、匿名内部类
匿名内部类是特殊的局部内部类
匿名内部类没有构造方法，局部内部类可以有构造方法
匿名内部类经常是一个抽象类的子类，或者一个接口的实现类，或者是...子类
匿名内部类不仅可以用在return后，而且可以用在任何一个需要得到子类或者实现类对象的地方，譬如当作方法的参数......

匿名内部类是多重继承的完美解决方案
class A implements B,C
{
}

class A implements B{
	C test(){
		return new C(){
		};
	}
}


class A extends B
{
}

class A extends B{
	C test(){
		return new C(){
		};
	}
}



五、异常
概念：什么是异常？为什么会有异常？为什么要对异常进行处理？
异常处理机制：1自己处理；2往上抛
异常的分类：未检查异常（运行时异常）和已检查异常
未检查异常：由于程序员的粗心大意.....  
已检查异常：不是由于程序员的粗心大意，而是由于一些外部因素...
异常信息栈：
三种组合：
1、try---catch
2、try---catch---finally
3、try---finally

throw与throws区别

归纳：
1、异常的分类：未检查异常与已检查异常
2、怎么处理一个异常
3、throw与throws区别
4、自定义异常类







